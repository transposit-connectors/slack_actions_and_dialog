{
  "v2": {
    "transposit": {
      "dependencies": [{
        "name": "transposit/slack:v1.*.*",
        "alias": "slack"
      }, {
        "name": "transposit/slack:v1.*.*",
        "alias": "slackbot"
      }, {
        "name": "transposit/airtable:v2.*.*",
        "alias": "airtable"
      }],
      "operations": [{
        "id": "post_confirmation",
        "tql": {
          "parameters": [{
            "name": "userid",
            "type": "STRING"
          }, {
            "name": "message",
            "type": "STRING"
          }, {
            "name": "url",
            "type": "STRING"
          }, {
            "name": "poster",
            "type": "STRING"
          }, {
            "name": "importance",
            "type": "STRING"
          }],
          "tql": "SELECT * FROM slackbot.post_chat_message\n  WHERE $body=(SELECT {\n  \t'link_names' : true,\n    'channel' : @userid,\n  \t'as_user' : true,\n    'attachments' : [\n     {\n       'title': 'Message clipped!',\n       -- This should be the link in the ClipIt web app\n       'title_link': @url,\n       'fields': [\n         {\n           'title': 'Message',\n           'value': @message\n         },\n         {\n           'title': 'Posted by',\n           'value': @poster,\n           'short': true\n         },\n         {\n           'title': 'Importance',\n           'value': @importance,\n           'short': true\n         },\n       ],\n     },\n   ]\n  })\n"
        }
      }, {
        "id": "open_dialog",
        "tql": {
          "parameters": [{
            "name": "trigger_id",
            "type": "STRING"
          }, {
            "name": "message",
            "type": "STRING"
          }, {
            "name": "name",
            "type": "STRING"
          }],
          "tql": "SELECT * FROM slackbot.open_dialog\n  WHERE $body=(SELECT {\n    'dialog' : {\n      'title': 'Save it to ClipIt!',\n      'callback_id': 'clipit',\n      'submit_label': 'ClipIt',\n      'elements': [\n         {\n           'label': 'Message Text',\n           'type': 'textarea',\n           'name': 'message',\n           'value': @message\n         },\n         {\n           'label': 'Posted by',\n           'type': 'text',\n           'name': 'send_by',\n           'value': @name\n         },\n         {\n           'label': 'Importance',\n           'type': 'select',\n           'name': 'importance',\n           'value': 'Medium',\n           'options': [\n             { 'label': 'High', 'value': 'High' },\n             { 'label': 'Medium', 'value': 'Medium' },\n             { 'label': 'Low', 'value': 'Low' }\n           ],\n         },\n      ]\n    },\n    'trigger_id' : @trigger_id\n  })\n"
        }
      }, {
        "id": "clipit",
        "function": {
          "parameters": [{
            "name": "http_event",
            "default": {
              "text": "{\"http_method\": \"GET\", \"query_parameters\": {}, \"headers\": {}, \"body\": \"\"}"
            },
            "type": "OBJECT"
          }],
          "js": "clipit_confirmation.js"
        },
        "access": {
          "requireApiKey": true,
          "webhook": true
        }
      }, {
        "id": "id_to_name",
        "tql": {
          "parameters": [{
            "name": "user",
            "type": "STRING"
          }],
          "tql": "SELECT user.name FROM slack.get_users_info\n  WHERE user=@user\n"
        }
      }, {
        "id": "create_record",
        "tql": {
          "parameters": [{
            "name": "message",
            "type": "STRING"
          }, {
            "name": "poster",
            "type": "STRING"
          }, {
            "name": "importance",
            "type": "STRING"
          }],
          "tql": "SELECT * FROM airtable.create_record\n  WHERE baseId=@baseId\t\t\t\t\t-- Be sure to set this to your Airtable BaseId in environment variables\n  AND table='ClipIt'\n  AND $body=(SELECT {\n    'fields' : {message: @message, poster: @poster, importance: @importance }\n  })\n"
        }
      }],
      "dataConnections": [{
        "ref": "slackbot.raw",
        "overrides": {
          "swagger": {
            "oauthConfig": {
              "scope": "bot,commands,chat:write:bot,users:read",
              "accessTokenPath": "bot.bot_access_token"
            },
            "executionLimits": {
            }
          }
        }
      }],
      "javascriptAPIVersion": "3",
      "source": "src",
      "userSettingsDisplay": "GENERATED"
    }
  }
}